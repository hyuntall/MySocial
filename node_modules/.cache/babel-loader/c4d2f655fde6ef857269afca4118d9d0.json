{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\components\\\\NweetFactory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { storageService, dbService } from \"myFirebase\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NweetFactory = _ref => {\n  _s();\n\n  let {\n    userObj\n  } = _ref;\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const fileInput = useRef();\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let attachmentURL = \"\";\n\n      if (attachment !== \"\") {\n        // 파일 경로 참조 생성\n        const attachmentRef = ref(storageService, `${userObj.uid}/${v4()}`); //v4: 랜덤숫자\n        // storage 참조 경로로 파일 업로드\n\n        const uploadFile = await uploadString(attachmentRef, attachment, \"data_url\"); // storage에 있는 파일 URL로 다운\n\n        attachmentURL = await getDownloadURL(uploadFile.ref);\n        console.log(attachmentURL);\n      }\n\n      const docRef = await addDoc(collection(dbService, \"nweets\"), {\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentURL\n      });\n      setNweet(\"\");\n      onClearAttachmentClick();\n    } catch (error) {\n      console.error(\"Error adding document: \", error);\n    }\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = event => {\n    // 이미지 입력 시 url을 읽는 함수\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(\"\");\n    fileInput.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: nweet,\n      onChange: onChange,\n      type: \"text\",\n      placeholder: \"What's on your mind?\",\n      maxLength: 120\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: onFileChange,\n      ref: fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Nweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: attachment,\n        width: \"50px\",\n        height: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearAttachmentClick,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NweetFactory, \"5/7c9UeNbxsxMzKBYYUGf2SRHCY=\");\n\n_c = NweetFactory;\nexport default NweetFactory;\n\nvar _c;\n\n$RefreshReg$(_c, \"NweetFactory\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/components/NweetFactory.js"],"names":["React","useState","storageService","dbService","addDoc","collection","getDownloadURL","ref","uploadString","v4","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileInput","useRef","onSubmit","event","preventDefault","attachmentURL","attachmentRef","uid","uploadFile","console","log","docRef","text","createdAt","Date","now","creatorId","onClearAttachmentClick","error","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishEvent","currentTarget","result","readAsDataURL","current"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { storageService, dbService } from \"myFirebase\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\"\r\nimport {v4} from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const fileInput = useRef();\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        try {\r\n            let attachmentURL = \"\";\r\n            if(attachment !== \"\"){\r\n                // 파일 경로 참조 생성\r\n                const attachmentRef = ref(storageService, `${userObj.uid}/${v4()}`);//v4: 랜덤숫자\r\n                // storage 참조 경로로 파일 업로드\r\n                const uploadFile = await uploadString(attachmentRef, attachment, \"data_url\");\r\n                // storage에 있는 파일 URL로 다운\r\n                attachmentURL = await getDownloadURL(uploadFile.ref)\r\n                console.log(attachmentURL);\r\n            }\r\n            const docRef = await addDoc(\r\n                collection(\r\n                    dbService, \"nweets\"), {\r\n                    text: nweet,\r\n                    createdAt: Date.now(),\r\n                    creatorId: userObj.uid,\r\n                    attachmentURL\r\n            });\r\n            setNweet(\"\");\r\n            onClearAttachmentClick();\r\n        } catch (error) {\r\n            console.error(\"Error adding document: \", error);\r\n        }\r\n    };\r\n    const onChange = (event) => {\r\n        const { target:{value} } = event;\r\n        setNweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        // 이미지 입력 시 url을 읽는 함수\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishEvent) => {\r\n            const {currentTarget: { result }} = finishEvent\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachmentClick = () => {\r\n        setAttachment(\"\")\r\n        fileInput.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n                <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\r\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} ref={fileInput}/>\r\n                <input type=\"submit\" value=\"Nweet\" />\r\n                {attachment && (\r\n                    <div>\r\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                        <button onClick={onClearAttachmentClick}>Clear</button>\r\n                    </div>\r\n                )}\r\n            </form>\r\n    )\r\n}\r\nexport default NweetFactory"]},"metadata":{},"sourceType":"module"}