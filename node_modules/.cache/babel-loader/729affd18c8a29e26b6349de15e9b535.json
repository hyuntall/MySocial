{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/gc159/Desktop/nwitter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/gc159/Desktop/nwitter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{authService,dbService}from\"myFirebase\";import{collection,getDocs,query,where,orderBy}from\"@firebase/firestore\";import{updateProfile}from\"@firebase/auth\";import React,{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(_ref){var userObj=_ref.userObj,refreshUser=_ref.refreshUser;var _useState=useState(userObj.displayName),_useState2=_slicedToArray(_useState,2),newDisplayName=_useState2[0],setNewDisplayName=_useState2[1];var onLogOutClick=function onLogOutClick(){authService.signOut();refreshUser();};var onChange=function onChange(event){var value=event.target.value;setNewDisplayName(value);};var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(userObj.displayName!==newDisplayName)){_context.next=5;break;}_context.next=4;return updateProfile(authService.currentUser,{displayName:newDisplayName});case 4:// 프사 업로드 기능도 만들어보기!\nrefreshUser();case 5:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();var getMyNweets=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var q,querySnapshot;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:q=query(collection(dbService,\"nweets\"),where(\"creatorId\",\"==\",userObj.uid),orderBy(\"createdAt\",\"desc\"));_context2.next=3;return getDocs(q);case 3:querySnapshot=_context2.sent;querySnapshot.forEach(function(doc){//console.log(doc.id, \" => \", doc.data());\n});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getMyNweets(){return _ref3.apply(this,arguments);};}();useEffect(function(){getMyNweets();});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,className:\"profileForm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Display name\",onChange:onChange,autoFocus:true,value:newDisplayName,className:\"formInput\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Update Profile\",className:\"formBtn\",style:{marginTop:10}})]}),/*#__PURE__*/_jsx(\"span\",{className:\"formBtn cancelBtn logOut\",onClick:onLogOutClick,children:\"Log Out\"})]});});","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/routes/Profile.js"],"names":["authService","dbService","collection","getDocs","query","where","orderBy","updateProfile","React","useEffect","useState","userObj","refreshUser","displayName","newDisplayName","setNewDisplayName","onLogOutClick","signOut","onChange","event","value","target","onSubmit","preventDefault","currentUser","getMyNweets","q","uid","querySnapshot","forEach","doc","marginTop"],"mappings":"wWAAA,OAASA,WAAT,CAAsBC,SAAtB,KAAuC,YAAvC,CACA,OAASC,UAAT,CAAqBC,OAArB,CAA8BC,KAA9B,CAAqCC,KAArC,CAA4CC,OAA5C,KAA2D,qBAA3D,CACA,OAASC,aAAT,KAA8B,gBAA9B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,wFAEA,eAAe,cAA8B,IAA3BC,CAAAA,OAA2B,MAA3BA,OAA2B,CAAlBC,WAAkB,MAAlBA,WAAkB,CACzC,cAA4CF,QAAQ,CAACC,OAAO,CAACE,WAAT,CAApD,wCAAOC,cAAP,eAAuBC,iBAAvB,eACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBhB,WAAW,CAACiB,OAAZ,GACAL,WAAW,GACd,CAHD,CAIA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACxB,GAAkBC,CAAAA,KAAlB,CAA8BD,KAA9B,CAAQE,MAAR,CAAkBD,KAAlB,CACAL,iBAAiB,CAACK,KAAD,CAAjB,CACH,CAHD,CAIA,GAAME,CAAAA,QAAQ,2FAAG,iBAAOH,KAAP,kHACbA,KAAK,CAACI,cAAN,GADa,KAEVZ,OAAO,CAACE,WAAR,GAAwBC,cAFd,gDAGHP,CAAAA,aAAa,CAACP,WAAW,CAACwB,WAAb,CAA0B,CAACX,WAAW,CAAEC,cAAd,CAA1B,CAHV,QAIT;AACAF,WAAW,GALF,sDAAH,kBAARU,CAAAA,QAAQ,6CAAd,CAQA,GAAMG,CAAAA,WAAW,2FAAG,4JACVC,CADU,CACNtB,KAAK,CACXF,UAAU,CAACD,SAAD,CAAY,QAAZ,CADC,CAEXI,KAAK,CAAC,WAAD,CAAc,IAAd,CAAoBM,OAAO,CAACgB,GAA5B,CAFM,CAGXrB,OAAO,CAAC,WAAD,CAAc,MAAd,CAHI,CADC,wBAMYH,CAAAA,OAAO,CAACuB,CAAD,CANnB,QAMVE,aANU,gBAOhBA,aAAa,CAACC,OAAd,CAAsB,SAACC,GAAD,CAAS,CAC3B;AACH,CAFD,EAPgB,wDAAH,kBAAXL,CAAAA,WAAW,2CAAjB,CAWAhB,SAAS,CAAC,UAAK,CACXgB,WAAW,GACd,CAFQ,CAAT,CAIA,mBACI,aAAK,SAAS,CAAC,WAAf,wBACF,cAAM,QAAQ,CAAEH,QAAhB,CAA0B,SAAS,CAAC,aAApC,wBACU,cAAO,IAAI,CAAC,MAAZ,CACA,WAAW,CAAC,cADZ,CAEA,QAAQ,CAAEJ,QAFV,CAGA,SAAS,KAHT,CAIA,KAAK,CAAEJ,cAJP,CAKA,SAAS,CAAC,WALV,EADV,cAOU,cACA,IAAI,CAAC,QADL,CAEJ,KAAK,CAAC,gBAFF,CAGJ,SAAS,CAAC,SAHN,CAIJ,KAAK,CAAE,CACHiB,SAAS,CAAE,EADR,CAJH,EAPV,GADE,cAgBI,aAAM,SAAS,CAAC,0BAAhB,CAA2C,OAAO,CAAEf,aAApD,qBAhBJ,GADJ,CAsBH,CAvDD","sourcesContent":["import { authService, dbService } from \"myFirebase\";\r\nimport { collection, getDocs, query, where, orderBy } from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        refreshUser();\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await updateProfile(authService.currentUser, {displayName: newDisplayName});\r\n            // 프사 업로드 기능도 만들어보기!\r\n            refreshUser();\r\n        }\r\n    }\r\n    const getMyNweets = async () => {\r\n        const q = query(\r\n            collection(dbService, \"nweets\"),\r\n            where(\"creatorId\", \"==\", userObj.uid),\r\n            orderBy(\"createdAt\", \"desc\")\r\n        );\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n            //console.log(doc.id, \" => \", doc.data());\r\n        });\r\n    };\r\n    useEffect(() =>{\r\n        getMyNweets();\r\n    })\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" \r\n                placeholder=\"Display name\"\r\n                onChange={onChange}\r\n                autoFocus\r\n                value={newDisplayName}\r\n                className=\"formInput\"/>\r\n                <input\r\n                type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n                marginTop: 10,\r\n            }} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}