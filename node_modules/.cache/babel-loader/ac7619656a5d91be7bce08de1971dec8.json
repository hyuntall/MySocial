{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\components\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { dbService, storageService } from \"myFirebase\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport 'post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    postObj,\n    isOwner\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [newPost, setNwePost] = useState(postObj.text);\n\n  const onDeleteClick = async () => {\n    // 게시글 삭제 함수\n    const ok = window.confirm(\"Are you sure you want to delete this post?\");\n    console.log(ok);\n\n    if (ok) {\n      const PostTextRef = doc(dbService, \"posts\", `${postObj.id}`); // delete post\n\n      await deleteDoc(PostTextRef);\n      const urlRef = ref(storageService, postObj.attachmentURL); // delete file\n\n      await deleteObject(urlRef);\n    }\n  }; // 게시글 편집 여부 토글 함수\n\n\n  const toggleEditing = () => setEditing(prev => !prev);\n\n  const onSubmit = async event => {\n    // 게시글 업데이트\n    event.preventDefault();\n    const PostTextRef = doc(dbService, \"posts\", `${postObj.id}`);\n    await updateDoc(PostTextRef, {\n      text: newPost\n    });\n    setEditing(false);\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNwePost(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: editing ?\n    /*#__PURE__*/\n    // 게시글 편집 상태\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"container postEdit\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPost,\n          onChange: onChange,\n          required: true,\n          autoFocus: true,\n          className: \"formInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Post\",\n          className: \"formBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleEditing,\n        className: \"formBtn cancelBtn\",\n        children: \"Cencel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // 기본 상태\n    _jsxDEV(_Fragment, {\n      children: [\"  \", postObj.creatorName ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: postObj.creatorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC774\\uB984 \\uC124\\uC815 \\uC548\\uD55C \\uBA4D\\uCCAD\\uC774\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 80\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: postObj.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), postObj.userProfileImg && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"userProfileImg\",\n        src: postObj.userProfileImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this), postObj.attachmentURL &&\n      /*#__PURE__*/\n      // 게시글에 이미지가 있을 경우 이미지 표시\n      _jsxDEV(\"img\", {\n        className: \"postImg\",\n        src: postObj.attachmentURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this), isOwner &&\n      /*#__PURE__*/\n      // 게시글 작성자 본인인 경우 편집,삭제버튼 표시\n      _jsxDEV(\"div\", {\n        className: \"post__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: onDeleteClick,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: toggleEditing,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPencilAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"YrBL+GUvwdobphF0ljPfLZ1oJOU=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/components/Post.js"],"names":["React","useState","dbService","storageService","doc","deleteDoc","updateDoc","deleteObject","ref","FontAwesomeIcon","faTrash","faPencilAlt","Post","postObj","isOwner","editing","setEditing","newPost","setNwePost","text","onDeleteClick","ok","window","confirm","console","log","PostTextRef","id","urlRef","attachmentURL","toggleEditing","prev","onSubmit","event","preventDefault","onChange","target","value","creatorName","userProfileImg"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { dbService, storageService  } from \"myFirebase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\"\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport 'post.css'\r\nconst Post = ({ postObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newPost, setNwePost] = useState(postObj.text);\r\n    const onDeleteClick = async () => {\r\n        // 게시글 삭제 함수\r\n        const ok = window.confirm(\"Are you sure you want to delete this post?\");\r\n        console.log(ok);\r\n        if(ok){\r\n            const PostTextRef = doc(dbService, \"posts\", `${postObj.id}`);\r\n            // delete post\r\n            await deleteDoc(PostTextRef);\r\n            const urlRef = ref(storageService, postObj.attachmentURL)\r\n            // delete file\r\n            await deleteObject(urlRef);\r\n        }\r\n    }\r\n    // 게시글 편집 여부 토글 함수\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n    const onSubmit = async (event) => {\r\n        // 게시글 업데이트\r\n        event.preventDefault();\r\n        const PostTextRef = doc(dbService, \"posts\", `${postObj.id}`);\r\n        await updateDoc(PostTextRef,{\r\n            text: newPost,\r\n        })\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setNwePost(value);\r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n            {editing ? ( // 게시글 편집 상태\r\n                <>\r\n                    <form onSubmit={onSubmit}\r\n                    className=\"container postEdit\">\r\n                        <input type=\"text\" value={newPost} onChange={onChange} \r\n                        required autoFocus className=\"formInput\"/>\r\n                        <input type=\"submit\" value=\"Update Post\" className=\"formBtn\"/>\r\n                    </form>\r\n                    <span onClick={toggleEditing}\r\n                    className=\"formBtn cancelBtn\">Cencel</span>\r\n                </>\r\n                ) : ( // 기본 상태\r\n                <>  {postObj.creatorName ? (<h4>{postObj.creatorName}</h4>) : (<h4>이름 설정 안한 멍청이</h4>)}\r\n                    <h4>{postObj.text}</h4>\r\n                    {postObj.userProfileImg &&\r\n                    (<img className=\"userProfileImg\" src={postObj.userProfileImg}/>)}\r\n                    {postObj.attachmentURL && // 게시글에 이미지가 있을 경우 이미지 표시\r\n                    (<img className=\"postImg\" src={postObj.attachmentURL}/>)}\r\n                    {isOwner && ( // 게시글 작성자 본인인 경우 편집,삭제버튼 표시\r\n                        <div className=\"post__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash}/>\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt}/>\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}