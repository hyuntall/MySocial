{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\routes\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport { authService, dbService } from \"myFirebase\";\nimport { collection, onSnapshot, query, where, orderBy } from \"@firebase/firestore\";\nimport { updateProfile } from \"@firebase/auth\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Post from \"components/Post\";\nimport 'profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(_ref => {\n  _s();\n\n  let {\n    userObj,\n    refreshUser\n  } = _ref;\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [attachment, setAttachment] = useState(\"\");\n  const fileInput = useRef();\n  const [myPosts, setMyPosts] = useState([]);\n\n  const onLogOutClick = () => {\n    // 로그아웃 함수\n    // 후에 유저 정보 리프레시\n    authService.signOut();\n    refreshUser();\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onFileChange = event => {\n    // 이미지 입력 시 url을 읽는 함수\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(\"\");\n    fileInput.current.value = \"\";\n  };\n\n  const onSubmit = async event => {\n    // 프로필 변경 함수\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(authService.currentUser, {\n        displayName: newDisplayName\n      }); // 프사 업로드 기능도 만들어보기!\n\n      refreshUser();\n    }\n  };\n\n  const getMyNweets = async () => {\n    // 내가 작성한 게시글만 호출\n    const q = query(collection(dbService, \"posts\"), where(\"creatorId\", \"==\", userObj.uid), orderBy(\"createdAt\", \"desc\"));\n    onSnapshot(q, snapshot => {\n      const postArr = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setMyPosts(postArr);\n    });\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"profileForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Display name\",\n          onChange: onChange,\n          autoFocus: true,\n          value: newDisplayName,\n          className: \"formInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileImgDiv\",\n          children: [attachment ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"myProfileImg\",\n            src: attachment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"myProfileImg\",\n            src: require(\"img/user.png\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"plusIcon\",\n            icon: faPlus,\n            size: \"2x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"attach-file\",\n            style: {\n              opacity: 0\n            } // 이미지파일 첨부 버튼\n            ,\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: onFileChange,\n            ref: fileInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update Profile\",\n        className: \"formBtn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"formBtn cancelBtn logOut\",\n      onClick: onLogOutClick,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        postObj: post,\n        isOwner: post.creatorId === userObj.uid\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}, \"Vb1mNh4Srz0IihqVuEqMGri8TnY=\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/routes/Profile.js"],"names":["authService","dbService","collection","onSnapshot","query","where","orderBy","updateProfile","React","useEffect","useState","useRef","FontAwesomeIcon","faPlus","Post","userObj","refreshUser","newDisplayName","setNewDisplayName","displayName","attachment","setAttachment","fileInput","myPosts","setMyPosts","onLogOutClick","signOut","onChange","event","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishEvent","currentTarget","result","readAsDataURL","onClearAttachmentClick","current","onSubmit","preventDefault","currentUser","getMyNweets","q","uid","snapshot","postArr","docs","map","doc","id","data","require","opacity","post","creatorId"],"mappings":"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","sourcesContent":["import { authService, dbService } from \"myFirebase\";\r\nimport { collection, onSnapshot, query, where, orderBy } from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Post from \"components/Post\";\r\nimport 'profile.css'\r\nexport default ({ userObj, refreshUser }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const fileInput = useRef();\r\n    const [myPosts, setMyPosts] = useState([]);\r\n    const onLogOutClick = () => {\r\n        // 로그아웃 함수\r\n        // 후에 유저 정보 리프레시\r\n        authService.signOut()\r\n        refreshUser();\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        // 이미지 입력 시 url을 읽는 함수\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishEvent) => {\r\n            const {currentTarget: { result }} = finishEvent\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachmentClick = () => {\r\n        setAttachment(\"\")\r\n        fileInput.current.value = \"\";\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        // 프로필 변경 함수\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await updateProfile(authService.currentUser, {displayName: newDisplayName});\r\n            // 프사 업로드 기능도 만들어보기!\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    const getMyNweets = async () => {\r\n        // 내가 작성한 게시글만 호출\r\n        const q = query(\r\n            collection(dbService, \"posts\"),\r\n            where(\"creatorId\", \"==\", userObj.uid),\r\n            orderBy(\"createdAt\", \"desc\")\r\n        );\r\n        onSnapshot(q, (snapshot) => {\r\n            const postArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n        setMyPosts(postArr);\r\n        });\r\n    };\r\n    useEffect(() =>{\r\n        getMyNweets();\r\n    })\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <div className=\"myInfo\">\r\n                    <input type=\"text\" \r\n                    placeholder=\"Display name\"\r\n                    onChange={onChange}\r\n                    autoFocus\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"/>\r\n                    <div className=\"profileImgDiv\">\r\n                        {attachment ? (\r\n                        <img className=\"myProfileImg\" src={attachment} />\r\n                        ):(\r\n                            <img className=\"myProfileImg\" src={require(\"img/user.png\")} />\r\n                        )}\r\n                        <FontAwesomeIcon className=\"plusIcon\" icon={faPlus} size=\"2x\"/>\r\n                        <input id=\"attach-file\" style={{opacity: 0}} // 이미지파일 첨부 버튼\r\n                        type=\"file\" accept=\"image/*\" onChange={onFileChange} ref={fileInput}/>\r\n                    </div>\r\n                </div>\r\n                <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"/>\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n            <div>\r\n                {myPosts.map(post => (\r\n                 <Post key={post.id} postObj={post} isOwner={post.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}