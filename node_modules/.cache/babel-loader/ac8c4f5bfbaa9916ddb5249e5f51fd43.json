{"ast":null,"code":"import _objectSpread from\"C:/Users/gc159/Desktop/nwitter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/gc159/Desktop/nwitter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/gc159/Desktop/nwitter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{authService,dbService,storageService}from\"myFirebase\";import{collection,onSnapshot,query,where,orderBy}from\"@firebase/firestore\";import{updateProfile}from\"@firebase/auth\";import{getDownloadURL,ref,uploadString}from\"firebase/storage\";import{v4}from\"uuid\";import React,{useEffect,useState,useRef}from\"react\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faPlus}from\"@fortawesome/free-solid-svg-icons\";import Post from\"components/Post\";import'profile.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(_ref){var userObj=_ref.userObj,refreshUser=_ref.refreshUser;var _useState=useState(userObj.displayName),_useState2=_slicedToArray(_useState,2),newDisplayName=_useState2[0],setNewDisplayName=_useState2[1];var _useState3=useState(userObj.photoURL),_useState4=_slicedToArray(_useState3,2),attachment=_useState4[0],setAttachment=_useState4[1];var fileInput=useRef();var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),myPosts=_useState6[0],setMyPosts=_useState6[1];var onLogOutClick=function onLogOutClick(){// 로그아웃 함수\n// 후에 유저 정보 리프레시\nauthService.signOut();refreshUser();};var onChange=function onChange(event){var value=event.target.value;setNewDisplayName(value);};var onFileChange=function onFileChange(event){// 이미지 입력 시 url을 읽는 함수\nvar files=event.target.files;var theFile=files[0];var reader=new FileReader();reader.onloadend=function(finishEvent){var result=finishEvent.currentTarget.result;setAttachment(result);};reader.readAsDataURL(theFile);};var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var attachmentURL,attachmentRef,uploadFile;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// 프로필 변경 함수\nevent.preventDefault();attachmentURL=\"\";if(!(attachment!==\"\")){_context.next=14;break;}// 이미지 첨부 했을 경우\n// 파일 경로 참조 생성\nattachmentRef=ref(storageService,\"\".concat(userObj.uid,\"/\").concat(v4()));//v4: 랜덤숫자\n// storage 참조 경로로 파일 업로드\n_context.next=6;return uploadString(attachmentRef,attachment,\"data_url\");case 6:uploadFile=_context.sent;_context.next=9;return getDownloadURL(uploadFile.ref);case 9:attachmentURL=_context.sent;console.log(attachmentURL);// 유저 프로필 이미지 업데이트\n_context.next=13;return updateProfile(authService.currentUser,{displayName:newDisplayName,photoURL:attachmentURL});case 13:// 프사 업로드 기능도 만들어보기!\nrefreshUser();case 14:if(!(userObj.displayName!==newDisplayName)){_context.next=18;break;}_context.next=17;return updateProfile(authService.currentUser,{displayName:newDisplayName,photoURL:attachmentURL});case 17:// 프사 업로드 기능도 만들어보기!\nrefreshUser();case 18:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();var getMyNweets=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var q;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// 내가 작성한 게시글만 호출\nq=query(collection(dbService,\"posts\"),where(\"creatorId\",\"==\",userObj.uid),orderBy(\"createdAt\",\"desc\"));onSnapshot(q,function(snapshot){var postArr=snapshot.docs.map(function(doc){return _objectSpread({id:doc.id},doc.data());});setMyPosts(postArr);});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function getMyNweets(){return _ref3.apply(this,arguments);};}();useEffect(function(){getMyNweets();});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,className:\"profileForm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"myInfo\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Display name\",onChange:onChange,autoFocus:true,value:newDisplayName,className:\"formInput\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profileImgDiv\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"myProfileImg\",src:attachment?attachment:require(\"img/user.png\")}),/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"plusIcon\",icon:faPlus,size:\"2x\"}),/*#__PURE__*/_jsx(\"input\",{id:\"attach-file\",style:{opacity:0}// 이미지파일 첨부 버튼\n,type:\"file\",accept:\"image/*\",onChange:onFileChange,ref:fileInput})]})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Update Profile\",className:\"formBtn\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"formBtn cancelBtn logOut\",onClick:onLogOutClick,children:\"Log Out\"}),/*#__PURE__*/_jsx(\"div\",{children:myPosts.map(function(post){return/*#__PURE__*/_jsx(Post,{postObj:post,isOwner:post.creatorId===userObj.uid},post.id);})})]});});","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/routes/Profile.js"],"names":["authService","dbService","storageService","collection","onSnapshot","query","where","orderBy","updateProfile","getDownloadURL","ref","uploadString","v4","React","useEffect","useState","useRef","FontAwesomeIcon","faPlus","Post","userObj","refreshUser","displayName","newDisplayName","setNewDisplayName","photoURL","attachment","setAttachment","fileInput","myPosts","setMyPosts","onLogOutClick","signOut","onChange","event","value","target","onFileChange","files","theFile","reader","FileReader","onloadend","finishEvent","result","currentTarget","readAsDataURL","onSubmit","preventDefault","attachmentURL","attachmentRef","uid","uploadFile","console","log","currentUser","getMyNweets","q","snapshot","postArr","docs","map","doc","id","data","require","opacity","post","creatorId"],"mappings":"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","sourcesContent":["import { authService, dbService, storageService } from \"myFirebase\";\r\nimport { collection, onSnapshot, query, where, orderBy } from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\"\r\nimport {v4} from \"uuid\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Post from \"components/Post\";\r\nimport 'profile.css'\r\nexport default ({ userObj, refreshUser }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [attachment, setAttachment] = useState(userObj.photoURL);\r\n    const fileInput = useRef();\r\n    const [myPosts, setMyPosts] = useState([]);\r\n    const onLogOutClick = () => {\r\n        // 로그아웃 함수\r\n        // 후에 유저 정보 리프레시\r\n        authService.signOut()\r\n        refreshUser();\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        // 이미지 입력 시 url을 읽는 함수\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishEvent) => {\r\n            const {currentTarget: { result }} = finishEvent\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        // 프로필 변경 함수\r\n        event.preventDefault();\r\n\r\n        let attachmentURL = \"\";\r\n        if(attachment !== \"\"){\r\n            // 이미지 첨부 했을 경우\r\n            // 파일 경로 참조 생성\r\n            const attachmentRef = ref(storageService, `${userObj.uid}/${v4()}`);//v4: 랜덤숫자\r\n            // storage 참조 경로로 파일 업로드\r\n            const uploadFile = await uploadString(attachmentRef, attachment, \"data_url\");\r\n            // storage에 있는 파일 URL로 다운\r\n            attachmentURL = await getDownloadURL(uploadFile.ref)\r\n            console.log(attachmentURL);\r\n            // 유저 프로필 이미지 업데이트\r\n            await updateProfile(authService.currentUser, {displayName: newDisplayName, photoURL: attachmentURL});\r\n            // 프사 업로드 기능도 만들어보기!\r\n            refreshUser();\r\n        }\r\n\r\n        if(userObj.displayName !== newDisplayName){\r\n            await updateProfile(authService.currentUser, {displayName: newDisplayName, photoURL: attachmentURL});\r\n            // 프사 업로드 기능도 만들어보기!\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    const getMyNweets = async () => {\r\n        // 내가 작성한 게시글만 호출\r\n        const q = query(\r\n            collection(dbService, \"posts\"),\r\n            where(\"creatorId\", \"==\", userObj.uid),\r\n            orderBy(\"createdAt\", \"desc\")\r\n        );\r\n        onSnapshot(q, (snapshot) => {\r\n            const postArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n        setMyPosts(postArr);\r\n        });\r\n    };\r\n    useEffect(() =>{\r\n        getMyNweets();\r\n    })\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <div className=\"myInfo\">\r\n                    <input type=\"text\" \r\n                    placeholder=\"Display name\"\r\n                    onChange={onChange}\r\n                    autoFocus\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"/>\r\n                    <div className=\"profileImgDiv\">\r\n                            <img className=\"myProfileImg\" src={attachment ? (attachment):(require(\"img/user.png\"))} />\r\n                        <FontAwesomeIcon className=\"plusIcon\" icon={faPlus} size=\"2x\"/>\r\n                        <input id=\"attach-file\" style={{opacity: 0}} // 이미지파일 첨부 버튼\r\n                        type=\"file\" accept=\"image/*\" onChange={onFileChange} ref={fileInput}/>\r\n                    </div>\r\n                </div>\r\n                <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"/>\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n            <div>\r\n                {myPosts.map(post => (\r\n                 <Post key={post.id} postObj={post} isOwner={post.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}