{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\routes\\\\Auth.js\";\nimport AuthForm from \"components/AuthForm\";\nimport { signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from \"firebase/auth\";\nimport { authService } from \"myFirebase\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n\n    const data = await signInWithPopup(authService, provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"google\",\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"github\",\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/routes/Auth.js"],"names":["AuthForm","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","authService","React","Auth","onSocialClick","event","target","name","provider","data"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,QAAwE,eAAxE;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACnC,UAAM;AACFC,MAAAA,MAAM,EAAE;AAACC,QAAAA;AAAD;AADN,QAEFF,KAFJ;AAGA,QAAIG,QAAJ;;AACA,QAAGD,IAAI,KAAK,QAAZ,EAAqB;AAChBC,MAAAA,QAAQ,GAAG,IAAIT,kBAAJ,EAAX;AACJ,KAFD,MAEO,IAAGQ,IAAI,KAAK,QAAZ,EAAqB;AACxBC,MAAAA,QAAQ,GAAG,IAAIR,kBAAJ,EAAX;AACH;;AACD,UAAMS,IAAI,GAAG,MAAMX,eAAe,CAACG,WAAD,EAAcO,QAAd,CAAlC;AACH,GAXD;;AAYA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAEJ,aAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEA,aAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvBD;;KAAMD,I;AAwBN,eAAeA,IAAf","sourcesContent":["import AuthForm from \"components/AuthForm\";\r\nimport { signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from \"firebase/auth\";\r\nimport { authService } from \"myFirebase\";\r\nimport React from \"react\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name}\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n             provider = new GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        const data = await signInWithPopup(authService, provider);\r\n    }\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}