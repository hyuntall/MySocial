{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\routes\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport AuthForm from \"components/AuthForm\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from \"firebase/auth\";\nimport { authService } from \"myFirebase\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n\n    const data = await signInWithPopup(authService, provider);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"google\",\n        children: \"Continue with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSocialClick,\n        name: \"github\",\n        children: \"Continue with Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/routes/Auth.js"],"names":["AuthForm","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","authService","React","useState","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","console","log","message","toggleAccount","prev","onSocialClick","provider"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAASC,8BAAT,EAAyCC,0BAAzC,EAAqEC,eAArE,EAAsFC,kBAAtF,EAA0GC,kBAA1G,QAAoI,eAApI;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMU,QAAQ,GAAIC,KAAD,IAAW;AACxB,UAAM;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP;AAAT,QAA0BH,KAAhC;;AACA,QAAGE,IAAI,KAAK,OAAZ,EAAoB;AAChBV,MAAAA,QAAQ,CAACW,KAAD,CAAR;AACH,KAFD,MAEM,IAAGD,IAAI,KAAK,UAAZ,EAAuB;AACzBR,MAAAA,WAAW,CAACS,KAAD,CAAX;AACH;AACJ,GAPD;;AAQA,QAAMC,QAAQ,GAAG,MAAOJ,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAI;AACA,UAAIC,IAAJ;;AACA,UAAGX,UAAH,EAAe;AACXW,QAAAA,IAAI,GAAG,MAAMxB,8BAA8B,CAACK,WAAD,EAAcI,KAAd,EAAqBE,QAArB,CAA3C;AACH,OAFD,MAEO;AACHa,QAAAA,IAAI,GAAG,MAAMvB,0BAA0B,CAACI,WAAD,EAAcI,KAAd,EAAqBE,QAArB,CAAvC;AACH;;AACDc,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KARD,CAQE,OAAOT,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACY,OAAP,CAAR;AACH;AACJ,GAbD;;AAcA,QAAMC,aAAa,GAAG,MAAMd,aAAa,CAAEe,IAAD,IAAU,CAACA,IAAZ,CAAzC;;AACA,QAAMC,aAAa,GAAG,MAAOZ,KAAP,IAAiB;AACnC,UAAM;AACFC,MAAAA,MAAM,EAAE;AAACC,QAAAA;AAAD;AADN,QAEFF,KAFJ;AAGA,QAAIa,QAAJ;;AACA,QAAGX,IAAI,KAAK,QAAZ,EAAqB;AAChBW,MAAAA,QAAQ,GAAG,IAAI5B,kBAAJ,EAAX;AACJ,KAFD,MAEO,IAAGiB,IAAI,KAAK,QAAZ,EAAqB;AACxBW,MAAAA,QAAQ,GAAG,IAAI3B,kBAAJ,EAAX;AACH;;AACD,UAAMoB,IAAI,GAAG,MAAMtB,eAAe,CAACG,WAAD,EAAc0B,QAAd,CAAlC;AACH,GAXD;;AAYA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAED,aAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEA,aAAjB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAlDD;;GAAMtB,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import AuthForm from \"components/AuthForm\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, GithubAuthProvider } from \"firebase/auth\";\r\nimport { authService } from \"myFirebase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        }else if(name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                data = await createUserWithEmailAndPassword(authService, email, password);\r\n            } else {\r\n                data = await signInWithEmailAndPassword(authService, email, password);\r\n            }\r\n            console.log(data)\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name}\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n             provider = new GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        const data = await signInWithPopup(authService, provider);\r\n    }\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}