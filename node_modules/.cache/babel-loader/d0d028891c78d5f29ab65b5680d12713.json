{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\routes\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { dbService } from \"myFirebase\";\nimport { addDoc, collection, getDocs, query } from \"firebase/firestore\";\nimport { React, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n\n  const getNweets = async () => {\n    const q = query(collection(dbService, \"nweets\"));\n    const querySnapShot = await getDocs(q);\n    querySnapShot.forEach(document => {\n      // 배열의 첫번째 요소는 가장 최근 document이고\n      // 그 뒤로 이전 document를 이어붙인 배열을 리턴\n      setNweets(prev => [document.data(), ...prev]);\n    });\n  };\n\n  console.log(nweets);\n  useEffect(() => {\n    getNweets();\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const docRef = await addDoc(collection(dbService, \"nweets\"), {\n        nweet,\n        createAt: Date.now()\n      });\n      setNweet(\"\");\n    } catch (error) {\n      console.error(\"Error adding document: \", error);\n    }\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: nweet,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxLength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"IALbbgkikD84dCoZ0+ewUlggGfA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/routes/Home.js"],"names":["dbService","addDoc","collection","getDocs","query","React","useState","useEffect","Home","nweet","setNweet","nweets","setNweets","getNweets","q","querySnapShot","forEach","document","prev","data","console","log","onSubmit","event","preventDefault","docRef","createAt","Date","now","error","onChange","target","value"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsCC,KAAtC,QAAmD,oBAAnD;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMO,SAAS,GAAG,YAAY;AAC1B,UAAMC,CAAC,GAAGV,KAAK,CAACF,UAAU,CAACF,SAAD,EAAY,QAAZ,CAAX,CAAf;AACA,UAAMe,aAAa,GAAG,MAAMZ,OAAO,CAACW,CAAD,CAAnC;AACAC,IAAAA,aAAa,CAACC,OAAd,CAAsBC,QAAQ,IAAI;AAC9B;AACA;AACAL,MAAAA,SAAS,CAACM,IAAI,IAAI,CAACD,QAAQ,CAACE,IAAT,EAAD,EAAkB,GAAGD,IAArB,CAAT,CAAT;AACH,KAJD;AAKH,GARD;;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMS,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACA,YAAMC,MAAM,GAAG,MAAMxB,MAAM,CACvBC,UAAU,CACNF,SADM,EACK,QADL,CADa,EAEG;AACtBS,QAAAA,KADsB;AAEtBiB,QAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL;AAFY,OAFH,CAA3B;AAMAlB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KARD,CAQE,OAAOmB,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACS,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACH;AACJ,GAbD;;AAcA,QAAMC,QAAQ,GAAIP,KAAD,IAAW;AACxB,UAAM;AAAEQ,MAAAA,MAAM,EAAC;AAACC,QAAAA;AAAD;AAAT,QAAqBT,KAA3B;AACAb,IAAAA,QAAQ,CAACsB,KAAD,CAAR;AACH,GAHD;;AAIA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEV,QAAhB;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEb,KAAd;AAAqB,QAAA,QAAQ,EAAEqB,QAA/B;AAAyC,QAAA,IAAI,EAAC,MAA9C;AAAqD,QAAA,WAAW,EAAC,sBAAjE;AAAwF,QAAA,SAAS,EAAE;AAAnG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA1CD;;GAAMtB,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import { dbService } from \"myFirebase\";\r\nimport { addDoc, collection, getDocs, query } from \"firebase/firestore\";\r\nimport { React, useState, useEffect } from \"react\";\r\n\r\nconst Home = () => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const getNweets = async () => {\r\n        const q = query(collection(dbService, \"nweets\"))\r\n        const querySnapShot = await getDocs(q);\r\n        querySnapShot.forEach(document => {\r\n            // 배열의 첫번째 요소는 가장 최근 document이고\r\n            // 그 뒤로 이전 document를 이어붙인 배열을 리턴\r\n            setNweets(prev => [document.data(), ...prev]);\r\n        });\r\n    }\r\n    console.log(nweets);\r\n    useEffect(() => {\r\n        getNweets();\r\n    }, [])\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const docRef = await addDoc(\r\n                collection(\r\n                    dbService, \"nweets\"), {\r\n                    nweet,\r\n                    createAt: Date.now(),\r\n            });\r\n            setNweet(\"\");\r\n        } catch (error) {\r\n            console.error(\"Error adding document: \", error);\r\n        }\r\n    };\r\n    const onChange = (event) => {\r\n        const { target:{value} } = event;\r\n        setNweet(value);\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\r\n                <input type=\"submit\" value=\"Nweet\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}