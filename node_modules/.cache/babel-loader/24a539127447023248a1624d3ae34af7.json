{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\components\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { authService } from \"myFirebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"authInput authSubmit\",\n        value: newAccount ? \"Create Account\" : \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"authError\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      className: \"authSwitch\",\n      children: newAccount ? \"Log In\" : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AuthForm, \"PzQQNDqROVuSUwGcld31eLJW8SE=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/components/AuthForm.js"],"names":["React","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","authService","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","console","log","message","toggleAccount","prev"],"mappings":"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","sourcesContent":["import { React, useState} from \"react\";\r\nimport {createUserWithEmailAndPassword, signInWithEmailAndPassword} from \"firebase/auth\";\r\nimport { authService } from \"myFirebase\";\r\nconst AuthForm =() => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        }else if(name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                data = await createUserWithEmailAndPassword(authService, email, password);\r\n            } else {\r\n                data = await signInWithEmailAndPassword(authService, email, password);\r\n            }\r\n            console.log(data)\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}\r\n        className=\"container\">\r\n                <input \r\n                name=\"email\"\r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email}\r\n                onChange={onChange}\r\n                className=\"authInput\"/>\r\n                <input \r\n                name=\"password\"\r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                required \r\n                value={password}\r\n                onChange={onChange}\r\n                className=\"authInput\"/>\r\n                <input type=\"submit\" \r\n                className=\"authInput authSubmit\"\r\n                value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount}\r\n            className=\"authSwitch\">{newAccount ? \"Log In\" : \"Create Account\"}</span>\r\n            </>\r\n    )\r\n}\r\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}