{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\components\\\\AuthForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? \"Create Account\" : \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? \"Log In\" : \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/components/AuthForm.js"],"names":["React","AuthForm","onChange","event","target","name","value","setEmail","setPassword","onSubmit","preventDefault","data","newAccount","createUserWithEmailAndPassword","authService","email","password","signInWithEmailAndPassword","console","log","error","setError","message","toggleAccount","setNewAccount","prev"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,QAAQ,GAAE,MAAM;AAClB,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,UAAM;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP;AAAT,QAA0BH,KAAhC;;AACA,QAAGE,IAAI,KAAK,OAAZ,EAAoB;AAChBE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAFD,MAEM,IAAGD,IAAI,KAAK,UAAZ,EAAuB;AACzBG,MAAAA,WAAW,CAACF,KAAD,CAAX;AACH;AACJ,GAPD;;AAQA,QAAMG,QAAQ,GAAG,MAAON,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACO,cAAN;;AACA,QAAI;AACA,UAAIC,IAAJ;;AACA,UAAGC,UAAH,EAAe;AACXD,QAAAA,IAAI,GAAG,MAAME,8BAA8B,CAACC,WAAD,EAAcC,KAAd,EAAqBC,QAArB,CAA3C;AACH,OAFD,MAEO;AACHL,QAAAA,IAAI,GAAG,MAAMM,0BAA0B,CAACH,WAAD,EAAcC,KAAd,EAAqBC,QAArB,CAAvC;AACH;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACH,KARD,CAQE,OAAOS,KAAP,EAAc;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACE,OAAP,CAAR;AACH;AACJ,GAbD;;AAcA,QAAMC,aAAa,GAAG,MAAMC,aAAa,CAAEC,IAAD,IAAU,CAACA,IAAZ,CAAzC;;AACA,sBACI;AAAA,4BACA;AAAM,MAAA,QAAQ,EAAEhB,QAAhB;AAAA,8BACQ;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,WAAW,EAAC,OAHZ;AAIA,QAAA,QAAQ,MAJR;AAKA,QAAA,KAAK,EAAEM,KALP;AAMA,QAAA,QAAQ,EAAEb;AANV;AAAA;AAAA;AAAA;AAAA,cADR,eAQQ;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,WAAW,EAAC,UAHZ;AAIA,QAAA,QAAQ,MAJR;AAKA,QAAA,KAAK,EAAEc,QALP;AAMA,QAAA,QAAQ,EAAEd;AANV;AAAA;AAAA;AAAA;AAAA,cARR,eAeQ;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEU,UAAU,GAAG,gBAAH,GAAsB;AAA5D;AAAA;AAAA;AAAA;AAAA,cAfR,EAgBSQ,KAhBT;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAmBI;AAAM,MAAA,OAAO,EAAEG,aAAf;AAAA,gBAA+BX,UAAU,GAAG,QAAH,GAAc;AAAvD;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA,kBADJ;AAuBH,CA/CD;;KAAMX,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst AuthForm =() => {\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        }else if(name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                data = await createUserWithEmailAndPassword(authService, email, password);\r\n            } else {\r\n                data = await signInWithEmailAndPassword(authService, email, password);\r\n            }\r\n            console.log(data)\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n                <input \r\n                name=\"email\"\r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email}\r\n                onChange={onChange}/>\r\n                <input \r\n                name=\"password\"\r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                required \r\n                value={password}\r\n                onChange={onChange}/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? \"Log In\" : \"Create Account\"}</span>\r\n            </>\r\n    )\r\n}\r\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}