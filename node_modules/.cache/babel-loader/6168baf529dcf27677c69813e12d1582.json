{"ast":null,"code":"import _slicedToArray from\"C:/Users/gc159/Desktop/nwitter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import AppRouter from\"components/Router\";import{authService}from\"myFirebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),init=_useState2[0],setInit=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoggedIn=_useState4[0],setIsLoggedIn=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),userObj=_useState6[0],setUserObj=_useState6[1];useEffect(function(){authService.onAuthStateChanged(function(user){if(user){setIsLoggedIn(true);setUserObj({displayName:user.displayName,uid:user.uid,updateProfile:function updateProfile(args){return user.updateProfile(user,{displayName:user.displayName});}});}else{setIsLoggedIn(false);//setUserObj(null);\n}setInit(true);});},[]);var refreshUser=function refreshUser(){var user=authService.currentUser;setUserObj({displayName:user.displayName,uid:user.uid,updateProfile:function updateProfile(args){return user.updateProfile(args);}});};return/*#__PURE__*/_jsxs(_Fragment,{children:[init?/*#__PURE__*/_jsx(AppRouter,{refreshUser:refreshUser,isLoggedIn:isLoggedIn,userObj:userObj}):\"Initializing...\",/*#__PURE__*/_jsxs(\"footer\",{children:[\"\\xA9 Nwitter \",new Date().getFullYear()]})]});}export default App;","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/components/App.js"],"names":["React","useEffect","useState","AppRouter","authService","App","init","setInit","isLoggedIn","setIsLoggedIn","userObj","setUserObj","onAuthStateChanged","user","displayName","uid","updateProfile","args","refreshUser","currentUser","Date","getFullYear"],"mappings":"oHAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,OAASC,WAAT,KAA4B,YAA5B,C,6IAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwBH,QAAQ,CAAC,KAAD,CAAhC,wCAAOI,IAAP,eAAaC,OAAb,eACA,eAAoCL,QAAQ,CAAC,KAAD,CAA5C,yCAAOM,UAAP,eAAmBC,aAAnB,eACA,eAA8BP,QAAQ,CAAC,IAAD,CAAtC,yCAAOQ,OAAP,eAAgBC,UAAhB,eACAV,SAAS,CAAC,UAAM,CACdG,WAAW,CAACQ,kBAAZ,CAA+B,SAACC,IAAD,CAAU,CACvC,GAAGA,IAAH,CAAQ,CACNJ,aAAa,CAAC,IAAD,CAAb,CACAE,UAAU,CAAC,CACTG,WAAW,CAAED,IAAI,CAACC,WADT,CAETC,GAAG,CAAEF,IAAI,CAACE,GAFD,CAGTC,aAAa,CAAE,uBAACC,IAAD,QAAUJ,CAAAA,IAAI,CAACG,aAAL,CAAmBH,IAAnB,CAAyB,CAACC,WAAW,CAAED,IAAI,CAACC,WAAnB,CAAzB,CAAV,EAHN,CAAD,CAAV,CAKD,CAPD,IAOO,CACLL,aAAa,CAAC,KAAD,CAAb,CACA;AACD,CACDF,OAAO,CAAC,IAAD,CAAP,CACD,CAbD,EAcD,CAfQ,CAeN,EAfM,CAAT,CAgBA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAML,CAAAA,IAAI,CAAGT,WAAW,CAACe,WAAzB,CACAR,UAAU,CAAC,CACTG,WAAW,CAAED,IAAI,CAACC,WADT,CAETC,GAAG,CAAEF,IAAI,CAACE,GAFD,CAGTC,aAAa,CAAE,uBAACC,IAAD,QAAUJ,CAAAA,IAAI,CAACG,aAAL,CAAmBC,IAAnB,CAAV,EAHN,CAAD,CAAV,CAKD,CAPD,CAQA,mBACA,2BACGX,IAAI,cAAG,KAAC,SAAD,EACR,WAAW,CAAEY,WADL,CAER,UAAU,CAAEV,UAFJ,CAGR,OAAO,CAAEE,OAHD,EAAH,CAGiB,iBAJxB,cAKE,0CAAwB,GAAIU,CAAAA,IAAJ,GAAWC,WAAX,EAAxB,GALF,GADA,CASD,CAED,cAAehB,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"myFirebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(user, {displayName: user.displayName}),\n        });\n      } else {\n        setIsLoggedIn(false);\n        //setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n  <>\n    {init ? <AppRouter \n    refreshUser={refreshUser}\n    isLoggedIn={isLoggedIn} \n    userObj={userObj}/> : \"Initializing...\"}\n    <footer>&copy; Nwitter {new Date().getFullYear()}</footer>\n  </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}