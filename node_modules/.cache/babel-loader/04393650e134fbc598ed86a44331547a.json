{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gc159\\\\Desktop\\\\nwitter\\\\src\\\\routes\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { dbService } from \"myFirebase\";\nimport { addDoc, collection, getDocs, query, onSnapshot, orderBy } from \"firebase/firestore\";\nimport { React, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    userObj\n  } = _ref;\n  console.log(userObj);\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n\n  const getNweets = async () => {\n    const q = query(collection(dbService, \"nweets\"));\n    const querySnapShot = await getDocs(q);\n    querySnapShot.forEach(document => {\n      const nweetObject = { ...document.data(),\n        id: document.id\n      }; // 배열의 첫번째 요소는 가장 최근 document이고\n      // 그 뒤로 이전 document를 이어붙인 배열을 리턴\n\n      setNweets(prev => [nweetObject, ...prev]);\n    });\n  };\n\n  useEffect(() => {\n    let nweetArr;\n    getNweets();\n    const q = query(collection(dbService, \"nweets\"), orderBy(\"createAt\", \"desc\"));\n    onSnapshot(q, snapshot => {\n      const nweetArr = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n    });\n    setNweets(nweetArr);\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const docRef = await addDoc(collection(dbService, \"nweets\"), {\n        text: nweet,\n        createAt: Date.now(),\n        creatorId: userObj.uid\n      });\n      setNweet(\"\");\n    } catch (error) {\n      console.error(\"Error adding document: \", error);\n    }\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: nweet,\n        onChange: onChange,\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        maxLength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nweets.map(nweet => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: nweet.nweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, nweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"IALbbgkikD84dCoZ0+ewUlggGfA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/gc159/Desktop/nwitter/src/routes/Home.js"],"names":["dbService","addDoc","collection","getDocs","query","onSnapshot","orderBy","React","useState","useEffect","Home","userObj","console","log","nweet","setNweet","nweets","setNweets","getNweets","q","querySnapShot","forEach","document","nweetObject","data","id","prev","nweetArr","snapshot","docs","map","doc","onSubmit","event","preventDefault","docRef","text","createAt","Date","now","creatorId","uid","error","onChange","target","value"],"mappings":"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","sourcesContent":["import { dbService } from \"myFirebase\";\r\nimport { addDoc, collection, getDocs, query, onSnapshot, orderBy } from \"firebase/firestore\";\r\nimport { React, useState, useEffect } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    console.log(userObj)\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const getNweets = async () => {\r\n        const q = query(collection(dbService, \"nweets\"))\r\n        const querySnapShot = await getDocs(q);\r\n        querySnapShot.forEach(document => {\r\n            const nweetObject = {\r\n                ...document.data(),\r\n                id: document.id,\r\n            }\r\n            // 배열의 첫번째 요소는 가장 최근 document이고\r\n            // 그 뒤로 이전 document를 이어붙인 배열을 리턴\r\n            setNweets(prev => [nweetObject, ...prev]);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        let nweetArr;\r\n        getNweets();\r\n        const q = query(collection(dbService, \"nweets\"),\r\n        orderBy(\"createAt\", \"desc\"));\r\n        onSnapshot(q, (snapshot) => {\r\n            const nweetArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n        })\r\n        setNweets(nweetArr)\r\n    }, [])\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const docRef = await addDoc(\r\n                collection(\r\n                    dbService, \"nweets\"), {\r\n                    text: nweet,\r\n                    createAt: Date.now(),\r\n                    creatorId: userObj.uid,\r\n            });\r\n            setNweet(\"\");\r\n        } catch (error) {\r\n            console.error(\"Error adding document: \", error);\r\n        }\r\n    };\r\n    const onChange = (event) => {\r\n        const { target:{value} } = event;\r\n        setNweet(value);\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\r\n                <input type=\"submit\" value=\"Nweet\" />\r\n            </form>\r\n            <div>\r\n                {nweets.map(nweet => (\r\n                <div key={nweet.id}>\r\n                    <h4>{nweet.nweet}</h4>\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}